// Generated by CoffeeScript 1.6.3
var apis, contributor, promise, _;

_ = require('lodash');

promise = require('when');

apis = {
  gem: require('gem-count'),
  github: require('github-repos'),
  npm: require('npm-packages'),
  cpan: require('cpan-count')
};

contributor = function(identities) {
  var check, counts, deferred, error, have, need, success;
  if (identities == null) {
    identities = {};
  }
  deferred = promise.defer();
  counts = {};
  have = 0;
  need = 0;
  check = function() {
    var action;
    action = ++have === need ? 'resolve' : 'notify';
    return deferred[action](counts);
  };
  success = function(platform, count) {
    counts[platform] = count;
    return check();
  };
  error = function(platform, err) {
    counts[platform] = err;
    return check();
  };
  _.each(apis, function(fn, platform) {
    if (platform in identities) {
      ++need;
      return fn(identities[platform]).then(function(count) {
        return success(platform, count);
      }, function(err) {
        return error(platform, err);
      });
    }
  });
  return deferred.promise;
};

contributor.support = _.keys(apis);

module.exports = contributor;
